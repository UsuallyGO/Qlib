IF(WIN32)
    CMAKE_MINIMUM_REQUIRED(VERSION 2.4.6 FATAL_ERROR)
ELSE(WIN32) 
    IF(APPLE)
        CMAKE_MINIMUM_REQUIRED(VERSION 2.6.0 FATAL_ERROR)
    ELSE(APPLE)
        CMAKE_MINIMUM_REQUIRED(VERSION 2.4.4 FATAL_ERROR)
    ENDIF(APPLE)
ENDIF(WIN32)

IF(COMMAND cmake_policy)
    CMAKE_POLICY(SET CMP0003 NEW)
ENDIF()

PROJECT(Qtest)

SET(QTEST_INCLUDE ${CMAKE_INSTALL_PREFIX}/include)
INCLUDE_DIRECTORIES(${QTEST_INCLUDE})

IF(WIN32)
    IF(MSVC)
	ELSE(MSVC)
	    FIND_LIBRARY(libqin "qin.dll")
	ENDIF(MSVC)
ELSE(WIN32)
    FIND_LIBRARY(libqin "qin")
ENDIF(WIN32)

SET(QMEMSRC memtest.c)

ADD_EXECUTABLE(memtest ${QMEMSRC})
IF(NOT libqin MATCHES libqin-NOTFOUND)
    TARGET_LINK_LIBRARIES(memtest ${libqin})
ENDIF()

SET(QLISTSRC listtest.c)
ADD_EXECUTABLE(listtest ${QLISTSRC})
IF(NOT libqin MATCHES libqin-NOTFOUND)
    TARGET_LINK_LIBRARIES(listtest ${libqin})
ENDIF()

SET(QSTACKSRC stacktest.c)
ADD_EXECUTABLE(stacktest ${QSTACKSRC})
IF(NOT libqin MATCHES libqin-NOTFOUND)
    TARGET_LINK_LIBRARIES(stacktest ${libqin})
ENDIF()

SET(QTREESRC treetest.c)
ADD_EXECUTABLE(treetest ${QTREESRC})
IF(NOT libqin MATCHES libqin-NOTFOUND)
    TARGET_LINK_LIBRARIES(treetest ${libqin})
ENDIF()

SET(QCOMPRESSSRC compresstest.c)
ADD_EXECUTABLE(compresstest ${QCOMPRESSSRC})
IF(NOT libqin MATCHES libqin-NOTFOUND)
    TARGET_LINK_LIBRARIES(compresstest ${libqin})
ENDIF()

SET(QSTRINGTEST stringtest.c)
ADD_EXECUTABLE(stringtest ${QSTRINGTEST})
IF(NOT libqin MATCHES libqin-NOTFOUND)
    TARGET_LINK_LIBRARIES(stringtest ${libqin})
ENDIF()

SET(QEXCLUDETEST excludetest.c)
ADD_EXECUTABLE(excludetest ${QEXCLUDETEST})
IF(NOT libqin MATCHES libqin-NOTFOUND)
    TARGET_LINK_LIBRARIES(excludetest ${libqin})
ENDIF()

SET(QSORTTEST sorttest.c)
ADD_EXECUTABLE(sorttest ${QSORTTEST})
IF(NOT libqin MATCHES libqin-NOTFOUND)
    TARGET_LINK_LIBRARIES(sorttest ${libqin})
ENDIF()

SET(QSKIPLISTTEST skiplisttest.c)
ADD_EXECUTABLE(skiplisttest ${QSKIPLISTTEST})
IF(NOT libqin MATCHES libqin-NOTFOUND)
    TARGET_LINK_LIBRARIES(skiplisttest ${libqin})
ENDIF()

SET(QENCRYTEST encrytest.c)
ADD_EXECUTABLE(encrytest ${QENCRYTEST})
IF(NOT libqin MATCHES libqin-NOTFOUND)
    TARGET_LINK_LIBRARIES(encrytest ${libqin})
ENDIF()

SET(QMATHTEST mathtest.c)
ADD_EXECUTABLE(mathtest ${QMATHTEST})
IF(NOT libqin MATCHES libqin-NOTFOUND)
    TARGET_LINK_LIBRARIES(mathtest ${libqin})
ENDIF()

SET(QGRAPHTEST graphtest.c)
ADD_EXECUTABLE(graphtest ${QGRAPHTEST})
IF(NOT libqin MATCHES libqin-NOTFOUND)
    TARGET_LINK_LIBRARIES(graphtest ${libqin})
ENDIF()

INSTALL(TARGETS memtest DESTINATION bin)
INSTALL(TARGETS listtest DESTINATION bin)
INSTALL(TARGETS stacktest DESTINATION bin)
INSTALL(TARGETS treetest DESTINATION bin)
INSTALL(TARGETS compresstest DESTINATION bin)
INSTALL(TARGETS stringtest DESTINATION bin)
INSTALL(TARGETS excludetest DESTINATION bin)
INSTALL(TARGETS sorttest DESTINATION bin)
INSTALL(TARGETS skiplisttest DESTINATION bin)
INSTALL(TARGETS encrytest DESTINATION bin)
INSTALL(TARGETS mathtest DESTINATION bin)
INSTALL(TARGETS graphtest DESTINATION bin)

